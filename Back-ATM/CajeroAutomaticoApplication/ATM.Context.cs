//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CajeroAutomaticoApplication
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CajeroAutomaticoEntities : DbContext
    {
        public CajeroAutomaticoEntities()
            : base("name=CajeroAutomaticoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Operacion> Operacions { get; set; }
        public virtual DbSet<Tarjeta> Tarjetas { get; set; }
    
        public virtual int BlockCreditCard(string nroTarjeta)
        {
            var nroTarjetaParameter = nroTarjeta != null ?
                new ObjectParameter("NroTarjeta", nroTarjeta) :
                new ObjectParameter("NroTarjeta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BlockCreditCard", nroTarjetaParameter);
        }
    
        public virtual ObjectResult<CommitOperation_Result> CommitOperation(string nroTarjeta, string tipoOperacion, Nullable<int> cantidadARetirar)
        {
            var nroTarjetaParameter = nroTarjeta != null ?
                new ObjectParameter("NroTarjeta", nroTarjeta) :
                new ObjectParameter("NroTarjeta", typeof(string));
    
            var tipoOperacionParameter = tipoOperacion != null ?
                new ObjectParameter("TipoOperacion", tipoOperacion) :
                new ObjectParameter("TipoOperacion", typeof(string));
    
            var cantidadARetirarParameter = cantidadARetirar.HasValue ?
                new ObjectParameter("CantidadARetirar", cantidadARetirar) :
                new ObjectParameter("CantidadARetirar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommitOperation_Result>("CommitOperation", nroTarjetaParameter, tipoOperacionParameter, cantidadARetirarParameter);
        }
    }
}
